/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface LeRoundProgress {
    'padding': number;
    'paths': string;
    'value': number;
  }
  interface LeRoundProgressAttributes extends StencilHTMLAttributes {
    'padding'?: number;
    'paths'?: string;
    'value'?: number;
  }

  interface LeTurntable {
    'center': string;
    'value': number;
  }
  interface LeTurntableAttributes extends StencilHTMLAttributes {
    'center'?: string;
    'value'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'LeRoundProgress': Components.LeRoundProgress;
    'LeTurntable': Components.LeTurntable;
  }

  interface StencilIntrinsicElements {
    'le-round-progress': Components.LeRoundProgressAttributes;
    'le-turntable': Components.LeTurntableAttributes;
  }


  interface HTMLLeRoundProgressElement extends Components.LeRoundProgress, HTMLStencilElement {}
  var HTMLLeRoundProgressElement: {
    prototype: HTMLLeRoundProgressElement;
    new (): HTMLLeRoundProgressElement;
  };

  interface HTMLLeTurntableElement extends Components.LeTurntable, HTMLStencilElement {}
  var HTMLLeTurntableElement: {
    prototype: HTMLLeTurntableElement;
    new (): HTMLLeTurntableElement;
  };

  interface HTMLElementTagNameMap {
    'le-round-progress': HTMLLeRoundProgressElement
    'le-turntable': HTMLLeTurntableElement
  }

  interface ElementTagNameMap {
    'le-round-progress': HTMLLeRoundProgressElement;
    'le-turntable': HTMLLeTurntableElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
